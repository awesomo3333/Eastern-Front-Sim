<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

//Keys for spawning units
spawnTankKey = ord('D') //right for russians
spawnInfantryKey = ord('S')//down for russians

//Counters for units

TankCounter = 0
TankCountTime = 30

InfantryCounter = 0
InfantryCountTime = 30

//Range for Units to spawn on the Y axis
TankSpwnRangeMin = 440
TankSpwnRangeMax = 1060

InfantrySpwnRangeMin = 450
InfantrySpwnRangeMax = 1070
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn Tank

//Checks if key is pressed and counts 
if (keyboard_check(spawnTankKey) &amp;&amp; TankCounter &lt; TankCountTime) {
    TankCounter += 1    
}

//Once it counts as long as set in create event it spawns a tank
if(TankCounter &gt;= TankCountTime) {
        instance_create(50, random_range(TankSpwnRangeMin,TankSpwnRangeMax), obj_G_Tank);

        TankCounter = 0
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn Infantry

//Checks if key is pressed then counts
if (keyboard_check(spawnInfantryKey) &amp;&amp; InfantryCounter &lt; InfantryCountTime) {
    InfantryCounter += 1    
}

//once it counts to timer set in create event spawns squad of soldiers
if(InfantryCounter &gt;= InfantryCountTime) {
        
    InfantryRanY = random_range(InfantrySpwnRangeMin, InfantrySpwnRangeMax)
    
    //Spawn squad of soldiers in sideways T formation( |- )
    instance_create(90, InfantryRanY, obj_G_Infantry)//Lowest soldier
    instance_create(90, InfantryRanY-10, obj_G_Infantry)//middle solder
    instance_create(90+10, InfantryRanY-10, obj_G_Infantry)//front soldier
    instance_create(90, InfantryRanY-20, obj_G_Infantry)//highest soldier
    
    
    InfantryCounter = 0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
